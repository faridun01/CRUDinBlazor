@page "/products/delete"
@using Microsoft.EntityFrameworkCore
@inject IDbContextFactory<CRUDinBlazor.Data.CRUDinBlazorContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Delete Product</PageTitle>

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card shadow-lg p-4">
                <h2 class="text-center text-danger"><i class="bi bi-trash3-fill"></i> Delete Product</h2>
                <hr />

                <p class="text-center fw-bold text-danger">Are you sure you want to delete this product?</p>

                @if (product is null)
                {
                    <div class="text-center">
                        <div class="spinner-border text-danger" role="status">
                            <span class="visually-hidden">Loading...</span>
                        </div>
                        <p class="mt-3"><em>Loading product details...</em></p>
                    </div>
                }
                else
                {
                    <div class="product-info">
                        <dl class="row">
                            <dt class="col-sm-4 fw-bold">Name:</dt>
                            <dd class="col-sm-8">@product.Name</dd>

                            <dt class="col-sm-4 fw-bold">Price:</dt>
                            <dd class="col-sm-8">$@product.Price</dd>

                            <dt class="col-sm-4 fw-bold">Quantity:</dt>
                            <dd class="col-sm-8">@product.Quantity</dd>
                        </dl>
                    </div>

                    <EditForm method="post" Model="product" OnValidSubmit="DeleteProduct" FormName="delete" Enhance>
                        <div class="d-flex justify-content-between mt-4">
                            <button type="submit" class="btn btn-danger px-4" disabled="@(product is null)">
                                <i class="bi bi-trash"></i> Delete
                            </button>
                            <a href="/products" class="btn btn-secondary px-4">
                                <i class="bi bi-arrow-left"></i> Cancel
                            </a>
                        </div>
                    </EditForm>
                }
            </div>
        </div>
    </div>
</div>

@code {
    private Product? product;

    [SupplyParameterFromQuery]
    private Guid Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        product = await context.Product.FirstOrDefaultAsync(m => m.Id == Id);

        if (product is null)
        {
            NavigationManager.NavigateTo("/notfound");
        }
    }

    private async Task DeleteProduct()
    {
        if (product is not null)
        {
            using var context = DbFactory.CreateDbContext();
            context.Product.Remove(product);
            await context.SaveChangesAsync();
            NavigationManager.NavigateTo("/products");
        }
    }
}
